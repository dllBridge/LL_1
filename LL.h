

//  19 Мая 2024 (10:02)
//  Разработчики: Владимир Старостин и Дмитрий Соболев
//  В этом файле мы называем связный список: очередью и массивом.
//  В языке Си требуется перед объявлением структурной переменной использовать ключевое слово struct


#include       <stdlib.h>


                                                      //             Эта структура описывает элемент связного списка. 
                                                      //             Именно из этих элементов будет состоять очередь.
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
struct TT
{
                                                      //          Пользовательская информация. Целое число или адрес
      int        n;                                   //                            переменной любого типа (32 бита).
                                                      //          конкретнее, для чего нужна переменная n?
                                                           
struct TT   *pNext;                                   //               Указатель на следующий элемент списка-очереди.
             
};






                                                      //                А эта структура описывает сам связный списоок.        
                                                      //                     Как массив элементов TT (связный список). 
////////////////////////////////////////////////////////   Мы сможем создать много очередей (элементгов структуры LL). 
struct LL
{
        
struct TT   *pHead;                                   //          Голова очереди. Указатель на её первый элемент (TT). 
struct TT   *pTail;                                   //          Хвост  очереди. Указатель на последний элемент.
       
      int nCounter;                                   //                                Кол-во элементов TT в очереди.
};






int LL_add(struct LL *pLL, int n);                    //         Прототип функции, которая добавит новый элемент TT в 
                                                      //                                          очередь с адресом p. 
                                                      //       Этот новый элемент будет содержать значение n в поле n. 



////////////////////////////////////////////////////////  Функция должна распечатать содержимое поля n для всех 
void LL_Print(struct LL *pLL);                        //                                  элементов очереди pLL.


